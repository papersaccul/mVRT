name: Rust CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc

      - name: Build Release
        run: cargo build --release --target x86_64-pc-windows-msvc --verbose

      - name: Create release directory
        run: |
          mkdir release
          copy target\x86_64-pc-windows-msvc\release\mVRT.exe release\
          if exist assets (xcopy /E /I assets release\assets\)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mVRT-windows-x64
          path: release/

  check-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Check compilation (только проверка, без линковки)
        run: cargo check --verbose

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: mVRT-windows-x64
          path: dist/windows

      - name: Install zip
        run: sudo apt-get install -y zip

      - name: Create ZIP archive
        run: |
          cd dist/windows
          zip -r ../mVRT-windows-x64.zip ./*

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/mVRT-windows-x64.zip
